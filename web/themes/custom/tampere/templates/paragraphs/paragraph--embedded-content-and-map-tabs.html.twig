{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 * - content_listing_block: Content listing block.
 * - tab_map_nodes: Optional. An array of content to display in the map tab for individual locations.
 *   Each item contains:
 *   - nid: The node ID.
 *   - content: Node content as a render array.
 * - tab_map_content: Optional. A map as a render array for the locations if there are any.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% if content_listing_block %}
  {% set tabs = {
    list: {
      title: "List view"|t,
      content: content_listing_block,
      panel_id: paragraph.id.value ~ "list",
      search_heading: "Search the list by keyword"|t
  },
  } %}

  {% if tab_map_content %}
    {% set tabs_with_map = {
      map: {
        title: "Map View"|t,
        content: tab_map_content,
        panel_id: paragraph.id.value ~ "map",
        search_heading: "Search the map by address"|t,
        popup_content: tab_map_nodes,
        use_search_panel: true
      },
    } %}

    {% set tabs = tabs_with_map|merge(tabs) %}
  {% endif %}

  {% embed "@organisms/_paragraph.twig" %}
    {% block paragraph_content %}
      {% include "@organisms/tabbed-container/tabbed-container.twig" with {
        "tabbed_container_identifier": paragraph.id.value,
        "tabbed_container__heading": paragraph.field_title.value,
        "tabbed_container_tabs": tabs,
        "tabbed_container__description": paragraph.field_description_text.value,
      } %}
    {% endblock %}
  {% endembed %}
{% endif %}
