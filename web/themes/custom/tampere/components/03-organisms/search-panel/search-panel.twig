{#
 # Available variables:
 # - search_panel__base_class - base classname of the wrapper.
 # - search_panel__modifiers - array of modifiers to add to the base classname of the wrapper.
 # - search_panel__blockname - blockname prepended to the base classname of the wrapper(s) and each component.
 #
 # - search_panel__panel_wrapper__modifiers - array of modifiers to add to the base classname of the panel wrapper.
 #
 # - search_panel__search_section__modifiers - array of modifiers to add to the base classname of the search section.
 # - search_panel__heading - main heading content for the component.
 #
 # - search_panel_identifier - a unique identifier for the search panel to be appended to the input ID.
 #
 # - search_panel__text - text content for the component.
 #
 # - search_panel__results_section__modifiers - array of modifiers to add to the base classname of the results section.
 #
 # - search_panel__popup_content__modifiers - array of modifiers to add to add to the base classname of the popup content.
 #
 # - search_panel__popup_item__modifiers - array of modifiers to add to the base classname of the popup item.
 #}
{% set search_panel__base_class = "search-panel" %}

{{ attach_library("tampere/search-panel") }}

{% if not search_panel__modifiers %}
  {% set search_panel__modifiers = [] %}
{% endif %}


{% if not search_panel__extra_classes %}
  {% set search_panel__extra_classes = [] %}
{% endif %}

{% if use_accordion %}
  {% set all_results_count = search_panel_accordion_list|length %}
  {% set search_panel__extra_classes = search_panel__extra_classes|merge([ "js-search-panel-list" ]) %}
{% else %}
  {% set all_results_count = search_panel_results|length %}
  {% set search_panel__modifiers = search_panel__modifiers|merge([ "restricted-height" ]) %}
  {% set search_panel__extra_classes = search_panel__extra_classes|merge([ "js-search-panel-map" ]) %}
  {% set search_panel_search_bar_input_placeholder = "Search for address"|t ({}, { "context" : "Embedded content and map tabs search placeholder in the map view" }) %}
  {% set search_panel_search_button_aria_label = "Search from map"|t ({}, { "context" : "Embedded content and map tabs search button description for screenreaders in map view" }) %}
{% endif %}

<div {{ bem(search_panel__base_class, search_panel__modifiers|default([]), search_panel__blockname, search_panel__extra_classes) }}>
  <div {{ bem("panel-wrapper", search_panel__panel_wrapper__modifiers|default([]), search_panel__base_class) }}>
    <div {{ bem("search-section", search_panel__search_section__modifiers|default([]), search_panel__base_class) }}>
      {% include "@molecules/search-bar/search-bar-with-label.twig" with {
        "search_bar__modifiers": [ "no-border" ],
        "search_bar_input_label": search_panel__heading,
        "search_bar_input_id": "search-panel-search-input-" ~ search_panel_identifier,
        "search_bar_input_placeholder": search_panel_search_bar_input_placeholder,
        "search_bar_value": search_panel_search_bar_value,
        "search_bar_button_type": "button",
        "search_bar_button_aria_label": search_panel_search_button_aria_label,
      } %}

      <div {{ bem("filters", search_panel__filters__modifiers|default([]), search_panel__base_class) }}>
        {% if all_results_count > 0 %}
          {% set all_results_description = all_results_description|default("Showing all locations"|t ({}, { "context" : "Embedded content and map tabs description for showing all results" })) %}

          {% include "@atoms/02-text/text/01-paragraph.twig" with {
            "paragraph_base_class": "text",
            "paragraph_blockname": search_panel__base_class,
            "paragraph_modifiers": [ "no-filters-applied" ],
            "paragraph_content": all_results_description ~ " " ~ all_results_count ~ "/" ~ all_results_count,
          } %}
        {% endif %}

        <div {{ bem("reset-wrapper", search_panel__reset_wrapper__modifiers|default([]), search_panel__base_class) }}>
          <p {{ bem("text", [ "results" ], search_panel__base_class) }}>
            {{ filtered_results_description|default("Showing locations"|t ({}, { "context" : "Embedded content and map tabs description for showing some results" })) }}
            <span class="js-result-count">{{ all_results_count }}</span>
            {{- "/" ~ all_results_count }}
          </p>

          <p {{ bem("text", [ "no-results" ], search_panel__base_class) }}>
            {{ no_results_description|default("No results"|t ({}, { "context" : "Embedded content and map tabs description for showing no results" })) }}
          </p>

          {% include "@atoms/06-buttons/01-button.twig" with {
            "button_content": "Show all"|t ({}, { "context" : "Embedded content and map tabs reset filter text" }),
            "button_base_class": "filter-reset",
            "button_blockname": search_panel__base_class,
          } %}
        </div>
      </div>
      {% if search_panel__description %}
        <p {{ bem("description", [], search_panel__base_class) }}>
          {{ search_panel__description }}
        </p>
      {% endif %}
    </div>
    <div {{ bem("results-section", search_panel__results_section__modifiers|default([]), search_panel__base_class) }}>
      {% block search_panel_results %}
        {# Accordion wrapper for search results #}
        {% if use_accordion and search_panel_accordion_list %}
          {% include "@organisms/accordion/accordion.twig" with {
            "accordion_item_heading_level": "h3",
            "ac_modifiers": [ "plain" ],
            "accordion_list": search_panel_accordion_list,
          } %}
        {# No accordion for search results #}
        {% else %}
          {{ search_panel_results }}
        {% endif %}
      {% endblock %}
    </div>
  </div>
  {% if search_panel_popup_content %}
    <div {{ bem("popup-content", search_panel__popup_content__modifiers|default([]), search_panel__base_class) }}>
      {% for item in search_panel_popup_content %}
        <div {{ bem("popup-item", search_panel__popup_item__modifiers|default([]), search_panel__base_class) }} hidden data-nid="{{ item.nid }}">
          {{ item.content }}
        </div>
      {% endfor %}
    </div>
  {% endif %}
</div>
