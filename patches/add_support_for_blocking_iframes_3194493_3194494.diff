diff --git a/cookieinformation.libraries.yml b/cookieinformation.libraries.yml
new file mode 100644
index 0000000..272d973
--- /dev/null
+++ b/cookieinformation.libraries.yml
@@ -0,0 +1,9 @@
+iframes:
+  js:
+    js/iframes.js: {}
+  dependencies:
+    - core/jquery
+    - core/drupal
+consent_mode:
+  js:
+    js/consent_mode.js: {}
diff --git a/cookieinformation.module b/cookieinformation.module
index 8e8f8d7..72d2a58 100644
--- a/cookieinformation.module
+++ b/cookieinformation.module
@@ -48,4 +48,27 @@ function cookieinformation_page_attachments_alter(array &$page) {
     ],
   ];
   $page['#attached']['html_head'][] = [$cookie_popup, 'cookieinformation.ucjs'];
+
+  if (!empty($config->get('block_iframes'))) {
+    $page['#attached']['library']['cookieinformation/iframes'] = 'cookieinformation/iframes';
+  }
+
+  $module_path = drupal_get_path('module', 'cookieinformation');
+  $js_path = $module_path . '/js/consent_mode.init.js';
+  $js_url = file_url_transform_relative(file_create_url($js_path));
+
+  $consent_mode_init_script = [
+    '#type' => 'html_tag',
+    '#tag' => 'script',
+    '#attributes' => [
+      'type' => 'text/javascript',
+      'id' => 'ConsentMode',
+      'src' => $js_url,
+    ],
+    '#weight' => -200,
+  ];
+  if (!empty($config->get('enable_google_consent_mode'))) {
+    $page['#attached']['html_head'][] = [$consent_mode_init_script, 'consent_mode_init_script_key'];
+    $page['#attached']['library']['cookieinformation/sdk'] = 'cookieinformation/consent_mode';
+  }
 }
diff --git a/js/consent_mode.init.js b/js/consent_mode.init.js
new file mode 100644
index 0000000..a818397
--- /dev/null
+++ b/js/consent_mode.init.js
@@ -0,0 +1,10 @@
+window.dataLayer = window.dataLayer || [];
+function gtag() {
+  dataLayer.push(arguments);
+}
+gtag('consent', 'default', {
+  'ad_storage': 'denied',
+  'analytics_storage': 'denied',
+  'wait_for_update': 500,
+});
+gtag('set', 'ads_data_redaction', true);
diff --git a/js/consent_mode.js b/js/consent_mode.js
new file mode 100644
index 0000000..cc72bdf
--- /dev/null
+++ b/js/consent_mode.js
@@ -0,0 +1,8 @@
+window.addEventListener('CookieInformationConsentGiven', function (event) {
+  if (CookieInformation.getConsentGivenFor('cookie_cat_statistic')) {
+    gtag('consent', 'update', {'analytics_storage': 'granted'});
+  }
+  if (CookieInformation.getConsentGivenFor('cookie_cat_marketing')){
+    gtag('consent', 'update', {'ad_storage': 'granted'});
+  }
+}, false);
\ No newline at end of file
diff --git a/js/iframes.js b/js/iframes.js
new file mode 100644
index 0000000..9a3bce2
--- /dev/null
+++ b/js/iframes.js
@@ -0,0 +1,32 @@
+/**
+ * @file
+ * Hides iframes when functional cookies are not accepted.
+ */
+
+ (function ($, Drupal) {
+  'use strict';
+
+  Drupal.behaviors.cookie_information_iframes = {
+    attach: function (context) {
+      $('iframe', context).not('[data-tampere-cookie-information="skip"]').each(function () {
+        $(this).attr('data-consent-src', $(this).attr('data-src'));
+        $(this).attr('data-category-consent', 'cookie_cat_functional');
+        $(this).removeAttr('data-src');
+        var consent_given = CookieInformation.getConsentGivenFor('cookie_cat_functional');
+        var display_style = consent_given ? 'none' : 'block';
+        $(this).after(
+          '<div class="consent-placeholder" data-category="cookie_cat_functional" style="display: ' + display_style + '">'
+          + '<p class="consent-placeholder__text">'
+          + Drupal.t(
+            "Unfortunately you are not able to view this content since you haven't accepted functional cookies. You can accept cookies by clicking on the green icon in the bottom left corner or on the Accept cookies button below.",
+            {},
+            { context: 'Cookie information' },
+          )
+          + '</p><button class="consent-placeholder__button" onClick="CookieConsent.renew()">'
+          + Drupal.t('Accept cookies', {}, { context: 'Cookie information' })
+          + '</button></div>',
+        );
+      });
+    },
+  };
+}(jQuery, Drupal));
diff --git a/src/Form/CookieInformationSettingsForm.php b/src/Form/CookieInformationSettingsForm.php
index 6d643da..972bb67 100644
--- a/src/Form/CookieInformationSettingsForm.php
+++ b/src/Form/CookieInformationSettingsForm.php
@@ -76,6 +76,18 @@ class CookieInformationSettingsForm extends ConfigFormBase {
         ],
       ],
     ];
+    $form['block_iframes'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Block iframes'),
+      '#description' => $this->t('Check to block iframes when user has not accepted functional cookies'),
+      '#default_value' => $this->config->get('block_iframes'),
+    ];
+    $form['enable_google_consent_mode'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Enable google consent mode'),
+      '#description' => $this->t('Check to enable Google consent mode.'),
+      '#default_value' => $this->config->get('enable_google_consent_mode'),
+    ];
     $form['visibility'] = [
       '#type' => 'fieldset',
       '#title' => $this->t('Cookie Information consent popup visibility'),
@@ -124,6 +136,8 @@ class CookieInformationSettingsForm extends ConfigFormBase {
     parent::submitForm($form, $form_state);
     $this->config->set("enable_popup", $form_state->getValue('enable_popup'));
     $this->config->set("enable_iab", $form_state->getValue('enable_iab'));
+    $this->config->set("block_iframes", $form_state->getValue('block_iframes'));
+    $this->config->set("enable_google_consent_mode", $form_state->getValue('enable_google_consent_mode'));
     $this->config->set('exclude_paths', $form_state->getValue('exclude_paths'));
     $this->config->set('exclude_admin', $form_state->getValue('exclude_admin'));
     $this->config->set('exclude_uid_1', $form_state->getValue('exclude_uid_1'));
