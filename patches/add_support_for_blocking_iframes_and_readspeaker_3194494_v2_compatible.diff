diff --git a/config/schema/cookieinformation.schema.yml b/config/schema/cookieinformation.schema.yml
index f18d3ebcb5fd01bcd5a6ea3a528fc146af356f43..407846a788e73b6d1caa638891a22bf7a828d0d2 100644
--- a/config/schema/cookieinformation.schema.yml
+++ b/config/schema/cookieinformation.schema.yml
@@ -10,6 +10,9 @@ cookieinformation.settings:
     enable_google_consent_mode:
       type: boolean
       label: 'Enable Google consent mode'
+    block_iframes:
+      type: boolean
+      label: 'Block iframes unless consent has been given'
     enable_iab:
       type: boolean
       label: 'Enable the IAB cookie consent popup.'
diff --git a/cookieinformation.install b/cookieinformation.install
index a7f2a2f4866e34085b94b18dde20e231053a51bc..ca761bd1fdae0b5acc248b13194d817a98f0183e 100644
--- a/cookieinformation.install
+++ b/cookieinformation.install
@@ -9,3 +9,13 @@ function cookieinformation_update_8101() {
   $config->set('enable_google_consent_mode', FALSE);
   $config->save(TRUE);
 }
+
+/**
+ * Add iframe blocking configuration default value.
+ */
+function cookieinformation_update_8102() {
+  $config_factory = \Drupal::configFactory();
+  $config = $config_factory->getEditable('cookieinformation.settings');
+  $config->set('block_iframes', TRUE);
+  $config->save(TRUE);
+}
diff --git a/cookieinformation.libraries.yml b/cookieinformation.libraries.yml
index 8188c06e4d8bc663f2d920ac33d8ae54c3ed41f8..c88ab1b6c31cb2d72a4f05dffce44eff0cc5d248 100644
--- a/cookieinformation.libraries.yml
+++ b/cookieinformation.libraries.yml
@@ -1,3 +1,9 @@
 consent_mode:
   js:
     js/consent_mode.js: {}
+iframes:
+  js:
+    js/iframes.js: {}
+  dependencies:
+    - core/jquery
+    - core/drupal
+    - core/once
diff --git a/cookieinformation.module b/cookieinformation.module
index 4dfbed21acc8d7b129eacb6755799b729848f3c0..f6dc2f27fc0fd8c19109aa2d20bd8f29d1cc16c4 100644
--- a/cookieinformation.module
+++ b/cookieinformation.module
@@ -74,4 +74,8 @@ function cookieinformation_page_attachments_alter(array &$page) {
     $page['#attached']['html_head'][] = [$consent_mode_init_script, 'consent_mode_init_script_key'];
     $page['#attached']['library']['cookieinformation/sdk'] = 'cookieinformation/consent_mode';
   }
+
+  if (!empty($config->get('block_iframes'))) {
+    $page['#attached']['library']['cookieinformation/iframes'] = 'cookieinformation/iframes';
+  }
 }
diff --git a/js/iframes.js b/js/iframes.js
new file mode 100644
index 0000000..9a3bce2
--- /dev/null
+++ b/js/iframes.js
@@ -0,0 +1,131 @@
+/**
+ * @file
+ * Hides iframes and disable ReadSpeaker buttons when functional cookies are not accepted.
+ */
+
+ (function ($, Drupal, once) {
+    'use strict';
+
+    Drupal.behaviors.cookie_information_iframes = {
+      attach: function (context) {
+        // Add a consent message after each iframe
+        // and show it if the cookie consent is not accepted
+        $(once('cookieinformation-iframes', 'iframe', context)).not('[data-tampere-cookie-information="skip"]').not('[name="cookie-information-sharinglibrary-iframe"]').each(function () {
+          $(this).attr('data-consent-src', $(this).attr('data-src'));
+          $(this).attr('data-category-consent', 'cookie_cat_functional');
+          $(this).removeAttr('data-src');
+
+          var consent_given = CookieInformation.getConsentGivenFor('cookie_cat_functional');
+          var display_style = consent_given ? 'none' : 'none';
+          $(this).after(
+            '<div class="consent-placeholder" data-category="cookie_cat_functional" style="display: ' + display_style + '">'
+            + '<p class="consent-placeholder__text rs_skip">'
+            + Drupal.t(
+              "Unfortunately you are not able to view this content since you haven't accepted functional cookies. You can accept cookies by clicking the Renew consent icon at the bottom left corner of the website or on the Accept cookies button below.",
+              {},
+              { context: 'Cookie information' },
+            )
+            + '</p><button class="consent-placeholder__button" onClick="CookieConsent.renew()">'
+            + Drupal.t('Accept cookies', {}, { context: 'Cookie information' })
+            + '</button></div>',
+          );
+        });
+
+        // Create a copy from ReadSpeaker buttons without the play link to prevent user from palying
+        // and create a consent button if there is at least one embed iframe.
+        $('iframe', context).not('[data-tampere-cookie-information="skip"]').each(function () {
+          var iframe_is_type_of_embed_iframes = $(this).parent().hasClass('embed-id') || $(this).hasClass('media-oembed-content');
+          if (iframe_is_type_of_embed_iframes) {
+            var consent_given = CookieInformation.getConsentGivenFor('cookie_cat_functional');
+            if (!consent_given) {
+              $('#readspeaker_button').after(
+                '<div'
+                + ' class="rsbtn rsbtn_text rs_preserve mega_toggle" id="readspeaker_button_copy" style="">'
+                + '<a class="rsbtn_play" href="#"></a></div>'
+                );
+              $('#readspeaker_button a').children().clone().appendTo('#readspeaker_button_copy a');
+
+              // Display the correct ReadSpeaker version
+              $('#readspeaker_button').css('display', consent_given ? 'block' : 'none');
+              $('#readspeaker_button_copy').css('display', consent_given ? 'none' : 'block');
+
+              $('#readspeaker_button_copy').parent().after(
+                '<div id="readspeaker_consent_placeholder" style="display: none;">'
+                + '<button '
+                + 'aria-label="' + Drupal.t(
+                  "Accept cookies in order to listen to the page with ReadSpeaker",
+                  {},
+                  { context: 'Cookie information' },
+                ) + '" '
+                + 'style="outline-style: solid; outline-color: blue; outline-width: 0;" id="readspeaker_consent_button" class="consent-placeholder" data-category="cookie_cat_functional" onClick="CookieConsent.renew()">'
+                + Drupal.t('Accept cookies', {}, { context: 'Cookie information' })
+                + '</button>'
+                + '</div>'
+                + '<style type="text/css"> #readspeaker_consent_placeholder button:focus{ border-color: blue;} </style>'
+              );
+            }
+
+          // No need to repeat it for the rest of iframes
+          return false;
+          }
+        });
+
+        // Hide Juicer Feed blocks if the necessary cookies are not accepted,
+        // and add a consent message after each one.
+        $('.juicer-feed', context).not('[data-tampere-cookie-information="skip"]').each(function () {
+          var consent_given = CookieInformation.getConsentGivenFor('cookie_cat_functional');
+          if (!consent_given) {
+            var display_style = consent_given ? 'none' : 'none';
+            $(this).after(
+              '<div class="consent-placeholder" data-category="cookie_cat_functional" style="display: ' + display_style + '">'
+              + '<p class="consent-placeholder__text rs_skip">'
+              + Drupal.t(
+                "Unfortunately you are not able to view this content since you haven't accepted functional cookies. You can accept cookies by clicking the Renew consent icon at the bottom left corner of the website or on the Accept cookies button below.",
+                {},
+                { context: 'Cookie information' },
+              )
+              + '</p><button class="consent-placeholder__button" onClick="CookieConsent.renew()">'
+              + Drupal.t('Accept cookies', {}, { context: 'Cookie information' })
+              + '</button></div>',
+            );
+          }
+
+        });
+
+        // Hide the fake ReadSpeaker buttons and show Juicer feeds as soon as the consent gets accepted.
+        $(window).on('CookieInformationConsentGiven', function (event) {
+          if (CookieInformation.getConsentGivenFor('cookie_cat_functional')){
+            $('#readspeaker_button').css('display', 'block');
+            $('#readspeaker_button_copy').css('display', 'none');
+            var $juicer_src = $('.juicer-feed').siblings('script').attr('src');
+            if ($juicer_src != undefined ) {
+              $.getScript($juicer_src);
+            }
+          }
+        })
+
+        // When ReadSpeaker block gets clicked, show the consent
+        // button if the cookie consent is not accepted.
+        $('#readspeaker_button_copy').click(function (e) {
+          if (!CookieInformation.getConsentGivenFor('cookie_cat_functional')){
+            $('#readspeaker_consent_placeholder').css('display', 'block');
+            $('#readspeaker_button_copy').parent().css('float', 'right');
+            $("#readspeaker_consent_placeholder button").focus();
+          }
+
+          // Prevent unwanted actions from ReadSpeaker
+          return false;
+        });
+
+        // Clear data-rsevent-id created by ReadSpeaker plugin
+        $('#readspeaker_button_copy a').click(function (e) {
+          $('#readspeaker_button_copy a').attr('data-rsevent-id', '');
+        });
+
+        $("#readspeaker_button_copy").on("keyup", function(e) {
+          if(e.keyCode == 13)
+              $("#readspeaker_button_copy").click()
+        });
+      },
+    };
+  }(jQuery, Drupal, once));
diff --git a/src/Form/CookieInformationSettingsForm.php b/src/Form/CookieInformationSettingsForm.php
index 5731c98b019cc3225ee658c2783197cb9aae0a00..2d6b2bae89382017eeac91708b438bd8f15e38e9 100644
--- a/src/Form/CookieInformationSettingsForm.php
+++ b/src/Form/CookieInformationSettingsForm.php
@@ -82,6 +82,12 @@ class CookieInformationSettingsForm extends ConfigFormBase {
       '#description' => $this->t('Check to enable Google consent mode.'),
       '#default_value' => $this->config->get('enable_google_consent_mode'),
     ];
+    $form['block_iframes'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Block iframes'),
+      '#description' => $this->t('Check to block iframes when user has not accepted functional cookies'),
+      '#default_value' => $this->config->get('block_iframes'),
+    ];
     $form['visibility'] = [
       '#type' => 'fieldset',
       '#title' => $this->t('Cookie Information consent popup visibility'),
@@ -131,6 +137,7 @@ class CookieInformationSettingsForm extends ConfigFormBase {
     $this->config->set("enable_popup", $form_state->getValue('enable_popup'));
     $this->config->set("enable_iab", $form_state->getValue('enable_iab'));
     $this->config->set("enable_google_consent_mode", $form_state->getValue('enable_google_consent_mode'));
+    $this->config->set("block_iframes", $form_state->getValue('block_iframes'));
     $this->config->set('exclude_paths', $form_state->getValue('exclude_paths'));
     $this->config->set('exclude_admin', $form_state->getValue('exclude_admin'));
     $this->config->set('exclude_uid_1', $form_state->getValue('exclude_uid_1'));
